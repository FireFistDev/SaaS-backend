// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Industry {
  Finance
  Commerce
}

enum SubscriptionEnum {
  FreeTier
  BasicTier
  PremiumTier
}

enum Visibility {
  Public
  Private
}

model Company {
  id                    Int               @id @default(autoincrement())
  isActive              Boolean           @default(false)
  name                  String            @default("")
  email                 String            @unique
  passwordHash          String
  country               String
  billing               Int               @default(0)
  industry              Industry
  workers               User[]
  companyFiles          UploadedFile[]    @relation("companyFiles")
  subscription          SubscriptionEnum?
  subscriptionExpiresAt DateTime          
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @updatedAt
}

model User {
  id           Int            @id @default(autoincrement())
  name         String
  email        String         @unique
  passwordHash String?
  companyId    Int
  company      Company        @relation(fields: [companyId], references: [id])
  ownedFiles   UploadedFile[] @relation("ownedFiles")
  visibleFiles UploadedFile[] @relation("visibleFiles")
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt

  @@unique([email, companyId])
}

model UploadedFile {
  id                String        @id @unique
  filename          String
  filePath          String
  visibility        Visibility @default(Public)
  owner             User       @relation("ownedFiles", fields: [ownerId], references: [id])
  ownerId           Int
  visibleForWorkers User[]     @relation("visibleFiles")
  company           Company    @relation("companyFiles", fields: [companyId], references: [id])
  companyId         Int
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
}
